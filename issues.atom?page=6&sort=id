<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Open Design Engine: Issues</title>
  <link rel="self" href="http://opendesignengine.net/issues.atom?page=6&amp;amp;sort=id"/>
  <link rel="alternate" href="http://opendesignengine.net/issues?page=6&amp;amp;sort=id"/>
  <id>http://opendesignengine.net/</id>
  <updated>2013-09-18T10:58:51+00:00</updated>
  <author>
    <name>Open Design Engine</name>
  </author>
  <generator uri="http://www.redmine.org/">
Redmine  </generator>
  <entry>
    <title>Shepard Test Stand - Feature #176 (New): Add Compulsory Version Matching Between Arduino and Java...</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/176"/>
    <id>http://opendesignengine.net/issues/176</id>
    <updated>2013-09-18T10:58:51+00:00</updated>
    <author>
      <name>Jeremy Wright</name>
    </author>
    <content type="html">
&lt;p&gt;Version matching between the Arduino code and the Java UI is going to be important. In most cases they'll need to be lock-stepped to ensure proper operation.&lt;/p&gt;


	&lt;p&gt;I think it would be ideal if we could embed the compiled Arduino code with the Java UI, have the UI check the software version on the Arduino, and then upload the embedded code if the Arduino is out of date. This would make software version matching completely transparent to the user, and would take us another step closer to passing the "Grandma Test" with Shepard.&lt;/p&gt;


	&lt;p&gt;A trick for getting at the compiled Arduino code:&lt;br /&gt;&lt;a class="external" href="http://stackoverflow.com/questions/8189306/command-line-arduino-compiling-and-downloading"&gt;http://stackoverflow.com/questions/8189306/command-line-arduino-compiling-and-downloading&lt;/a&gt;&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Bug #175 (Feedback): Java GUI does not yet save CSV of data captured from th...</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/175"/>
    <id>http://opendesignengine.net/issues/175</id>
    <updated>2013-09-13T15:16:16+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
&lt;p&gt;The Processing version has this feature, but is not yet present in the Java version.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Bug #174 (In Progress): Create Java based GUI for Shepard DCS</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/174"/>
    <id>http://opendesignengine.net/issues/174</id>
    <updated>2013-09-12T22:24:26+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
&lt;p&gt;The intent of this is to replace the existing features of the Processing based GUI, as well as add additional features that either had yet to be implemented in the Processing version, or new features that arise to be slated for a 1.1 release.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Feature #173 (New): Add a "wizard" mode for the Shepard GUI</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/173"/>
    <id>http://opendesignengine.net/issues/173</id>
    <updated>2013-09-12T22:20:03+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
The current GUI is set up in more of an "expert" format, where all of the options for controlling the hardware and GUI are immediately available.  It would be good for many situations though to have the control options simplified into a guided, step-by-step format.  The steps would be:
	&lt;ol&gt;
	&lt;li&gt;Connect&lt;/li&gt;
		&lt;li&gt;Calibrate&lt;/li&gt;
		&lt;li&gt;Set Test Notations&lt;/li&gt;
		&lt;li&gt;Record&lt;/li&gt;
		&lt;li&gt;Stop Recording&lt;/li&gt;
		&lt;li&gt;Clear&lt;br /&gt;After the last step, this test "wizard" would put the user back at step 3 for another test.&lt;/li&gt;
	&lt;/ol&gt;    </content>
  </entry>
  <entry>
    <title>Laboratory EKG Pre-Amplifier - Milestone #172 (New): Machine 15 Enclosure Lids/Bodies</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/172"/>
    <id>http://opendesignengine.net/issues/172</id>
    <updated>2013-09-04T14:03:08+00:00</updated>
    <author>
      <name>Amanda Wozniak</name>
    </author>
    <content type="html">
&lt;p&gt;Once a suitable drill template solution is found and proven to work - it will be time to machine the last 15 enclosures.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Laboratory EKG Pre-Amplifier - Milestone #171 (New): Find a Workable Drill Templating Solution</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/171"/>
    <id>http://opendesignengine.net/issues/171</id>
    <updated>2013-09-03T12:22:47+00:00</updated>
    <author>
      <name>Amanda Wozniak</name>
    </author>
    <content type="html">
&lt;p&gt;Find a work-around for the hand-drill alignment issue (&lt;a href="http://opendesignengine.net/issues/169" class="issue status-1 priority-2" title="Enclosure Marking/Machining Accuracy Issue (New)"&gt;#169&lt;/a&gt;).&lt;/p&gt;


	&lt;p&gt;&lt;em&gt;&lt;strong&gt;This milestone can be closed once the fabrication method has been confirmed to work well. Minimum required test quantity = 2 units.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Laboratory EKG Pre-Amplifier - Bug #169 (New): Enclosure Marking/Machining Accuracy Issue</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/169"/>
    <id>http://opendesignengine.net/issues/169</id>
    <updated>2013-09-03T12:08:33+00:00</updated>
    <author>
      <name>Amanda Wozniak</name>
    </author>
    <content type="html">
&lt;p&gt;I exported a DXF of the mechanical layers of the top assembly, and used that to laser-mark the enclosure lids for pilot drills. &lt;em&gt;&lt;strong&gt;But aligning the drill press by hand when you care about alignment tolerances is a poor choice.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;


	&lt;p&gt;In the first five units, I wasn't able to machine the enclosure lids or bodies to any reasonable tolerance, so my fits were poor. I had to compensate by using stepped drill bits to add a lot of slop to all the holes.&lt;/p&gt;


	&lt;p&gt;I need to fabricate a registration guide/jig that I can clamp to my work-piece which allows me to more precisely align my drills.&lt;/p&gt;


	&lt;p&gt;&lt;em&gt;&lt;strong&gt;PROPOSED SOLUTION:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;


	&lt;ol&gt;
	&lt;li&gt;dimension/draw enclosure lid perimter with mounting holes&lt;/li&gt;
		&lt;li&gt;Use DXF to laser-cut a jig for the pilot holes - include perimeter with mounting holes for registration&lt;/li&gt;
		&lt;li&gt;figure out a way to clamp/fixture the workpiece on my drill press&lt;/li&gt;
		&lt;li&gt;test-drill using jig&lt;/li&gt;
		&lt;li&gt;if that works - repeat process for enclosure body&lt;/li&gt;
	&lt;/ol&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Bug #157 (Feedback): Time Stamp Bit Size Wrong On Arduino and Client</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/157"/>
    <id>http://opendesignengine.net/issues/157</id>
    <updated>2013-08-13T21:58:12+00:00</updated>
    <author>
      <name>Jeremy Wright</name>
    </author>
    <content type="html">
&lt;p&gt;On the client side (laptop) we have been reading the time stamp (via the millis function) as a signed integer. According to the documentation, we should be treating that value as an unsigned long, giving us up to 50 days before it rolls over.&lt;/p&gt;


	&lt;p&gt;&lt;a class="external" href="http://arduino.cc/en/Reference/millis"&gt;http://arduino.cc/en/Reference/millis&lt;/a&gt;&lt;/p&gt;


	&lt;p&gt;To do this we'll have to account for the fact that a long on the Arduino is 32 bits. Currently we're only sending 16 bits over the wire to the client. Sending 32 bits will slow the data rate down slightly, but I'm not sure yet by how much.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Open Design Engine - Feature #156 (New): Change "Issues" to "Tickets"</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/156"/>
    <id>http://opendesignengine.net/issues/156</id>
    <updated>2013-08-03T13:48:57+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
&lt;p&gt;It seems incorrect for the "Issues" tab to be called issues, and much more correct to call it "Tickets".  One of the primary reasons for this is that what information is captured under that module are not all issues: features for example are not (always) issues, but nice-to-have's and things of a nature other than an issue.  Another reason is that "Issue" has a negative connotation with it.  Several places will need to be changed to reflect the update in nomenclature, and this should all be able to be accomplished by updating the .yaml files.  Investigation should be done though into how one might change the labels through a plugin as opposed to the .yaml files.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Bug #155 (New): Research Whether or Not the 30 Foot Safety Radius For E Moto...</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/155"/>
    <id>http://opendesignengine.net/issues/155</id>
    <updated>2013-08-01T22:34:19+00:00</updated>
    <author>
      <name>Jeremy Wright</name>
    </author>
    <content type="html">
&lt;p&gt;There has been discussion that the 30 foot safety radius for the E motors may be more about the increased risk of horizontal movement of a rocket with an E motor than the explosive force that can be generated by one. Research needs to be done, including contacting Estes and the NAR (National Association of Rocketry), to find out exactly why the radius for an E was chosen.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Feature #154 (New): Return 0.0 For Temperature if IR Sensor is Not Connected</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/154"/>
    <id>http://opendesignengine.net/issues/154</id>
    <updated>2013-07-30T22:17:02+00:00</updated>
    <author>
      <name>Jeremy Wright</name>
    </author>
    <content type="html">
&lt;p&gt;Currently the Arduino will hang if it's can't address the MLX90614 IR temperature sensor. Most of the time this is what you want since you want to make sure you're getting good temperature data. However, there are cases where you may want to run the test stand without a temperature sensor, or have damaged a temperature sensor and need it to run with only thrust measurements. The easiest way to do this would be to just give the caller a value of 0.0. For use with Shepard the temperature should never be 0.0 degrees C, so the user will be able to easily tell that they need to make sure the MLX sensor is connected if they want temperature measurements.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Shepard Test Stand - Feature #153 (In Progress): Switch to 5 Volt Version of MLX90614 IR Sensor</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/153"/>
    <id>http://opendesignengine.net/issues/153</id>
    <updated>2013-07-30T10:35:08+00:00</updated>
    <author>
      <name>Jeremy Wright</name>
    </author>
    <content type="html">
&lt;p&gt;There are both 3.3 volt and 5 volt versions of the MLX non-contact IR sensor we're using. We currently have the 3.3 volt version for Shepard v1.1. We need to switch to the 5 volt version so that it and the load cell can be on a common voltage.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Open Design Engine - Feature #152 (New): Add "Create new page" button to wiki system</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/152"/>
    <id>http://opendesignengine.net/issues/152</id>
    <updated>2013-07-24T12:41:11+00:00</updated>
    <author>
      <name>J. Simmons</name>
    </author>
    <content type="html">
&lt;p&gt;From a user:  "I just realized (as I was writing this email) that I can create a new wiki page by simply entering /wiki/newpage into the URL and vioala it pops up.  I save and can then link to it.  While that's great, it took me a while to figure that out.  It may be good to add a "add new page" button somewhere, so it's a little more obvious."&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Open Design Engine - Feature #151 (New): Open ID Integration</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/151"/>
    <id>http://opendesignengine.net/issues/151</id>
    <updated>2013-07-20T14:21:14+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
&lt;p&gt;The idea is to allow users to log in with the same accounts they have from other sites, such as Google, using OpenID.  This will make it so that if they choose to, their authentication will be done through them, and if they are logged in on that site and navigate to ODE, they are logged in on ODE as well. There's some capabilities for this already for Redmine, so it should not require reinventing the weel.&lt;/p&gt;    </content>
  </entry>
  <entry>
    <title>Open Design Engine - Feature #150 (New): Install and begin usage of Redmine CMS Plugin</title>
    <link rel="alternate" href="http://opendesignengine.net/issues/150"/>
    <id>http://opendesignengine.net/issues/150</id>
    <updated>2013-07-20T14:15:19+00:00</updated>
    <author>
      <name>Christopher Sigman</name>
    </author>
    <content type="html">
&lt;p&gt;The plugin (&lt;a class="external" href="http://www.redmine.org/plugins/cms"&gt;http://www.redmine.org/plugins/cms&lt;/a&gt;) may be very useful for adding additional information that would require writing a custom plugin at the moment in a much easier manner.&lt;/p&gt;    </content>
  </entry>
</feed>
